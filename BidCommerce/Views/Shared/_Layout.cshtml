@using BidCommerce.Data
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    var user = await UserManager.GetUserAsync(User);
    var isSeller = user?.IsSeller ?? false;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - BidCommerce</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">BidCommerce</a>
                <div class="collapse navbar-collapse">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                    </ul>

                    <div class="d-flex align-items-center">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <form id="toggleForm" method="post" class="btn-group me-3" role="group">
                                <button type="button" data-role="Buyer"
                                        class="btn btn-sm @(isSeller ? "btn-outline-primary" : "btn-primary")">
                                    Buyer
                                </button>
                                <button type="button" data-role="Seller"
                                        class="btn btn-sm @(isSeller ? "btn-primary" : "btn-outline-primary")">
                                    Seller
                                </button>
                            </form>
                        }

                        <partial name="_LoginPartial" />
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted mt-5">
        <div class="container">
            &copy; 2025 - BidCommerce
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#toggleForm button').on('click', function () {
                var button = $(this);
                var selectedRole = button.data('role');

                button.prop('disabled', true).removeClass('btn-primary btn-outline-primary')
                    .addClass('btn-warning').text('Switching...');
                button.siblings('button').prop('disabled', true);

                $.ajax({
                    url: '@Url.Action("ToggleRole", "User")',
                    type: 'POST',
                    data: { role: selectedRole },
                    success: function (response) {
                        if (response.success) {
                            updateButtons(response.newRole);
                            location.reload(); // Optional: reload if needed to reflect new view logic
                        } else {
                            alert('Error: ' + response.message);
                            updateButtons('@(isSeller ? "Seller" : "Buyer")');
                        }
                    },
                    error: function () {
                        alert('An error occurred while switching roles.');
                        updateButtons('@(isSeller ? "Seller" : "Buyer")');
                    }
                });

                function updateButtons(activeRole) {
                    $('#toggleForm button').each(function () {
                        var btn = $(this);
                        var role = btn.data('role');
                        btn.prop('disabled', false)
                            .removeClass('btn-warning btn-primary btn-outline-primary')
                            .addClass(role === activeRole ? 'btn-primary' : 'btn-outline-primary')
                            .text(role);
                    });
                }
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
