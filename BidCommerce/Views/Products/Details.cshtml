@model BidCommerce.Models.Product
@{
    ViewData["Title"] = Model.Title;
}

<link rel="stylesheet" href="~/css/details-products.css" />

<div class="product-details-container">
    <div class="product-main">
        <!-- Left Side - Images -->
        <div class="product-images">
            <div class="main-image">
                @{
                    var imageUrl = "/images/placeholder-product.jpg";
                    var imageUrls = new List<string>();

                    if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        imageUrls = Model.ImageUrl.Split(',').ToList();
                        imageUrl = imageUrls.First();
                    }
                    else
                    {
                        imageUrls.Add(imageUrl);
                    }
                }
                <img src="@imageUrl" alt="@Model.Title" id="mainProductImage" />
            </div>

            @if (imageUrls.Count > 1)
            {
                <div class="thumbnail-images">
                    @for (int i = 0; i < imageUrls.Count && i < 4; i++)
                    {
                        <div class="thumbnail @(i == 0 ? "active" : "")" onclick="changeMainImage('@imageUrls[i]', this)">
                            <img src="@imageUrls[i]" alt="@Model.Title view @(i + 1)" />
                        </div>
                    }
                </div>
            }
        </div>

        <!-- Right Side - Product Info -->
        <div class="product-info">
            <div class="product-header">
                <h1 class="product-title">@Model.Title</h1>
                <div class="product-category">@Model.Category?.Name</div>
            </div>

            <!-- Pricing Section -->
            <div class="pricing-section">
                @if (Model.IsBiddable)
                {
                    <div class="current-bid">
                        <span class="bid-label">Current bid</span>
                        <div class="bid-amount">$@((Model.CurrentBid ?? Model.StartingPrice ?? 0).ToString("N0"))</div>
                        <span class="bid-count">@(new Random(Model.Id).Next(1, 20)) bids</span>
                    </div>

                    @if (Model.BidEndTime.HasValue)
                    {
                        var timeLeft = Model.BidEndTime.Value - DateTime.Now;
                        <div class="time-left">
                            @if (timeLeft.TotalHours > 24)
                            {
                                <span class="time-value">@((int)timeLeft.TotalDays)d @((int)timeLeft.Hours)h left</span>
                            }
                            else if (timeLeft.TotalHours >= 1)
                            {
                                <span class="time-value">@((int)timeLeft.TotalHours)h @((int)timeLeft.Minutes)m left</span>
                            }
                            else if (timeLeft.TotalMinutes > 0)
                            {
                                <span class="time-value">@((int)timeLeft.TotalMinutes)m left</span>
                            }
                            else
                            {
                                <span class="time-value ended">Auction Ended</span>
                            }
                        </div>
                    }

                    @if (Model.BuyNowPrice.HasValue)
                    {
                        <div class="buy-now-section">
                            <span class="buy-now-label">or Buy It Now</span>
                            <div class="buy-now-price">$@Model.BuyNowPrice.Value.ToString("N0")</div>
                        </div>
                    }
                }
                else
                {
                    <div class="fixed-price">
                        <span class="price-label">Price</span>
                        <div class="price-amount">$@((Model.BuyNowPrice ?? Model.StartingPrice ?? 0).ToString("N0"))</div>
                    </div>
                }
            </div>

            <!-- Bidding/Purchase Section -->
            <div class="action-section">
                @if (Model.IsBiddable && Model.BidEndTime.HasValue && Model.BidEndTime.Value > DateTime.Now)
                {
                    <div class="bidding-form">
                        <label for="bidAmount">Enter your maximum bid</label>
                        <div class="bid-input-group">
                            <span class="currency">$</span>
                            <input type="number" id="bidAmount" class="bid-input"
                                   min="@((Model.CurrentBid ?? Model.StartingPrice ?? 0) + 1)"
                                   placeholder="@((Model.CurrentBid ?? Model.StartingPrice ?? 0) + 1)" />
                        </div>
                        <button class="btn-place-bid" onclick="placeBid()">Place Bid</button>
                    </div>
                }

                @if (Model.BuyNowPrice.HasValue)
                {
                    <button class="btn-buy-now" onclick="buyNow(@Model.Id)">Buy Now</button>
                }
            </div>

            <!-- Shipping & Info -->
            <div class="shipping-info">
                <div class="shipping-row">
                    <span class="label">Shipping:</span>
                    <span class="value">Free</span>
                </div>
                <div class="shipping-row">
                    <span class="label">Item location:</span>
                    <span class="value">New York, NY</span>
                </div>
                <div class="shipping-row">
                    <span class="label">Delivery:</span>
                    <span class="value">3-5 business days</span>
                </div>
            </div>

            <!-- Guarantees -->
            <div class="guarantees">
                <div class="guarantee-item">
                    <i class="bi bi-shield-check"></i>
                    <span>Buyer Protection</span>
                </div>
                <div class="guarantee-item">
                    <i class="bi bi-arrow-return-left"></i>
                    <span>Returns Accepted</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Seller Information -->
    <div class="seller-section">
        <div class="seller-info">
            <h3>Seller Information</h3>

            <div class="seller-details">
                @if (!string.IsNullOrEmpty(Model.Owner?.PhotoFileName))
                {
                    <img class="seller-photo" src="/images/profiles/@Model.Owner.PhotoFileName" alt="Seller Photo" />
                }
                else
                {
                    <img class="seller-photo" src="/images/default-profile.jpg" alt="Seller Photo" />
                }

                <div class="seller-name">
                    @(Model.Owner != null ? $"{Model.Owner.FirstName} {Model.Owner.LastName}" : "Anonymous Seller")
                </div>
                <div class="seller-country">
                    From: @(Model.Owner?.Country ?? "Unknown")
                </div>
                <div class="seller-joined">
                    Member since: @(Model.Owner?.RegisteredAt.ToString("MMMM yyyy") ?? "N/A")
                </div>
                <div class="seller-rating">
                    <div class="rating-stars">
                        @for (int i = 0; i < 5; i++)
                        {
                            if (i < Math.Floor(Model.Owner?.AverageRating ?? 0))
                            {
                                <i class="bi bi-star-fill"></i>
                            }
                            else
                            {
                                <i class="bi bi-star"></i>
                            }
                        }
                        <span class="rating-number">@((Model.Owner?.AverageRating ?? 0).ToString("0.0"))</span>
                    </div>
                    <div class="seller-stats">
                        <span>@(Model.Owner?.TotalProductsSold ?? 0) items sold</span>
                        <span>@(Model.Owner?.TotalRatingsCount ?? 0) ratings</span>
                    </div>
                </div>
        </div>

        <!-- Recent Bids (for auctions) -->
        @if (Model.IsBiddable)
        {
            <div class="recent-bids">
                <h3>Recent Bids</h3>
                <div class="bids-list">
                    @{
                        var random = new Random(Model.Id);
                        var currentBid = Model.CurrentBid ?? Model.StartingPrice ?? 0;
                        var bids = new List<(decimal amount, string time, string bidder)>();

                        for (int i = 0; i < 5; i++)
                        {
                            var bidAmount = currentBid - (i * random.Next(50, 200));
                            var timeAgo = random.Next(1, 48);
                            var bidderName = $"bidder_{random.Next(100, 999)}";
                            bids.Add((bidAmount, $"{timeAgo}h ago", bidderName));
                        }
                    }

                    @foreach (var bid in bids)
                    {
                        <div class="bid-item">
                            <span class="bid-amount">$@bid.amount.ToString("N0")</span>
                            <span class="bid-time">@bid.time</span>
                            <span class="bidder">@bid.bidder</span>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Product Details Tabs -->
    <div class="product-tabs">
        <div class="tab-headers">
            <button class="tab-header active" onclick="showTab('description')">Description</button>
            <button class="tab-header" onclick="showTab('specifications')">Specifications</button>
            <button class="tab-header" onclick="showTab('shipping')">Shipping & Returns</button>
        </div>

        <div class="tab-content">
            <div id="description" class="tab-pane active">
                <h3>Description</h3>
                <div class="description-content">
                    <p>@Model.Description</p>

                    @if (Model.Category?.Name?.ToLower().Contains("watch") == true)
                    {
                        <div class="features-list">
                            <h4>Features:</h4>
                            <ul>
                                <li>Authentic vintage timepiece in excellent condition</li>
                                <li>Automatic movement, recently serviced</li>
                                <li>Water resistant to 200m</li>
                                <li>Original dial and hands included</li>
                                <li>No original box/papers</li>
                            </ul>

                            <p>This watch has been in my personal collection for over 15 years and has been meticulously maintained. The dial shows beautiful patina consistent with its age, and the movement keeps excellent time.</p>

                            <p>All original components with matching serial numbers. This is a rare opportunity to own a piece of horological history.</p>
                        </div>
                    }
                </div>
            </div>

            <div id="specifications" class="tab-pane">
                <h3>Specifications</h3>
                <div class="specs-table">
                    <div class="spec-row">
                        <span class="spec-label">Brand:</span>
                        <span class="spec-value">@(Model.Category?.Name ?? "Not specified")</span>
                    </div>
                    <div class="spec-row">
                        <span class="spec-label">Model:</span>
                        <span class="spec-value">Submariner</span>
                    </div>
                    <div class="spec-row">
                        <span class="spec-label">Year:</span>
                        <span class="spec-value">1970</span>
                    </div>
                    <div class="spec-row">
                        <span class="spec-label">Case Material:</span>
                        <span class="spec-value">Stainless Steel</span>
                    </div>
                    <div class="spec-row">
                        <span class="spec-label">Case Size:</span>
                        <span class="spec-value">40mm</span>
                    </div>
                    <div class="spec-row">
                        <span class="spec-label">Movement:</span>
                        <span class="spec-value">Automatic</span>
                    </div>
                    <div class="spec-row">
                        <span class="spec-label">Water Resistance:</span>
                        <span class="spec-value">200m</span>
                    </div>
                    <div class="spec-row">
                        <span class="spec-label">Condition:</span>
                        <span class="spec-value">Excellent</span>
                    </div>
                </div>
            </div>

            <div id="shipping" class="tab-pane">
                <h3>Shipping & Returns</h3>
                <div class="shipping-details">
                    <div class="shipping-section">
                        <h4>Shipping Options</h4>
                        <ul>
                            <li><strong>Standard Shipping:</strong> Free - 3-5 business days</li>
                            <li><strong>Express Shipping:</strong> $15.99 - 1-2 business days</li>
                            <li><strong>Overnight Shipping:</strong> $29.99 - Next business day</li>
                        </ul>
                    </div>

                    <div class="returns-section">
                        <h4>Returns Policy</h4>
                        <p>30-day returns accepted. Item must be returned in original condition.</p>
                        <p>Buyer pays return shipping costs unless item was not as described.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function changeMainImage(imageSrc, thumbnail) {
        document.getElementById('mainProductImage').src = imageSrc;

        // Update active thumbnail
        document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
        thumbnail.classList.add('active');
    }

    function showTab(tabName) {
        // Hide all tab panes
        document.querySelectorAll('.tab-pane').forEach(pane => {
            pane.classList.remove('active');
        });

        // Remove active class from all headers
        document.querySelectorAll('.tab-header').forEach(header => {
            header.classList.remove('active');
        });

        // Show selected tab
        document.getElementById(tabName).classList.add('active');
        event.target.classList.add('active');
    }

    function placeBid() {
        const bidAmount = document.getElementById('bidAmount').value;
        if (!bidAmount || parseFloat(bidAmount) <= 0) {
            alert('Please enter a valid bid amount');
            return;
        }

        // Here you would typically make an AJAX call to place the bid
        alert(`Bid of $${bidAmount} placed successfully! (This is a demo)`);
    }

    function buyNow(productId) {
        if (confirm('Are you sure you want to buy this item now?')) {
            // Redirect to buy now action
            window.location.href = `/Products/BuyNow/${productId}`;
        }
    }
</script>
